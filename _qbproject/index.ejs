<!-- Main jumbotron for a primary marketing message or call to action -->
<div class="head-prom">
    <div class="container grid-anchor">
        <div class="row">
            <div class="col-md-6">
                <h1>qb Project</h1>
                <p>
                    a Data DSL for Scala with libraries for Play based on JSON schema
                </p>
                <p>
                    <a class="btn btn-primary btn-lg btn-warning" role="button" href="/learn">Learn more &raquo;</a>
                </p>
            </div>
            <div class="col-md-offset-2 col-md-4">
                <div class="grid-bg"></div>
                <div class="qb-logo"></div>
            </div>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="col-md-8">
            <h2>Available modules</h2>
            <p>
                The qb project (<em>pronounced</em>: cube) provides  project aims to ease the development of JSON based APIs using Play Framework. Following the 
                <a href="http://mandubian.com/2013/01/13/JSON-Coast-to-Coast/">JSON coast to coast</a> principle.
            </p>
            <ul>
                <li>qbSchema - Core schema validation and transformation</li>
                <li>qbPlay - ReactiveMongo adapter & Play Router extensions </li>
                <li>qbCSV - Enables complex CSV transformations into JSON</li>
            </ul>
        </div>
        <div class="col-md-4">
            <h2>We â™¥ Open Source!</h2>
            <p>qb Project is open source and free! <a href="/contribute">Participate</a> by contributing enhancements, requesting features or by reporting bugs!</p>
        </div>
    </div>

    <%- partial( "_qbSchema") %>

        <div class="row">
            <div class="col-md-4">
                <h2>Based on JSON schema</h2>
                <p>
                    qb is based on JSON schema and therefore can be easily picked up by anyone who understands JSON schema.
                    Furthermore, every qb schema can be exported to JSON schema and vice verca. This enables a high interoperability with other tools.
                </p>
            </div>
            
            <div class="col-md-4">
                <h2>Play integration</h2>
                <p>
                   qb integrates with Play and provides an own module qbPlay. qbPlay contains many convenience types like custom 
                   controllers, actions, collections and routers that all ease the developer experience.
                </p>
            </div>
            
            <div class="col-md-4">
                <h2>qbForms & more</h2>
                <p>
                    We are currently working on a qbForms, a module, which will enable autogenerated AngularJS forms based on qbSchema.
                    Furthermore we'll soon begin working on schema to case class conversion.
                </p>
            </div>
        </div>
</div>